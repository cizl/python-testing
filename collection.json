{
	"info": {
		"_postman_id": "b99a3eb4-1b8a-422e-a134-da5693b35423",
		"name": "Stores REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User create store and item",
			"item": [
				{
					"name": "/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.clearEnvironmentVariable(\"access_token\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.';",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"abcxyz\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\");",
									"",
									"tests[\"Response time is less than 150ms\"] = responseTime < 150;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"abcxyz\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/test_store",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f30a5874-646e-4286-bf92-a9b09b4d4f42",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Store name is returned\"] = jsonData.name === 'test_store';",
									"tests[\"Store id is returned\"] = jsonData.id === 1;",
									"tests[\"Store items are an empty list\"] = jsonData.items.length === 0;",
									"",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';",
									"",
									"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/store/test_store",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"store",
								"test_store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/test_item in test_store",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Item name is returned\"] = jsonData.name === 'test_item';",
									"tests[\"Item price is returned\"] = jsonData.price === 17.99;",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 17.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/api/item/test_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"test_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Store 'test_store' is returned\"] = jsonData.stores[0].name === 'test_store';",
									"tests[\"ID of store 'test_store' is returned\"] = jsonData.stores[0].id === parseInt(environment.store_id);",
									"tests[\"Item 'test_item' is returned inside 'test_store'\"] = jsonData.stores[0].items[0].name === 'test_item';",
									"tests[\"Item 'test_item' price is returned inside 'test_store'\"] = jsonData.stores[0].items[0].price === 17.99;",
									"",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/my_item copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Message is returned\"] = jsonData.message === 'Item deleted';",
									"tests[\"Successful POST request\"] = responseCode.code === 200;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/item/test_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"test_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name> copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Store name is returned\"] = jsonData.message === 'Store deleted';",
									"tests[\"Successful POST request\"] = responseCode.code === 200;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/store/test_store",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"store",
								"test_store"
							]
						}
					},
					"response": []
				}
			],
			"description": "Check user can register.\nCheck user can create store.\nCheck user can create item in store."
		},
		{
			"name": "Populate",
			"item": [
				{
					"name": "/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5928c67-84aa-4a3b-b749-60ed5504acef",
								"type": "text/javascript",
								"exec": [
									"postman.clearEnvironmentVariable(\"access_token\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.';",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"user2\",\n\t\"password\": \"abcxyz\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\");",
									"",
									"tests[\"Response time is less than 150ms\"] = responseTime < 150;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"abcxyz\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/store1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e153b7d-baf1-477e-ba92-73f31c102f4f",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Store name is returned\"] = jsonData.name === 'store1';",
									"tests[\"Store id is returned\"] = jsonData.id === 1;",
									"tests[\"Store items are an empty list\"] = jsonData.items.length === 0;",
									"",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';",
									"",
									"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/store/store1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"store",
								"store1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/itemA in store1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "805be04d-963f-4778-b263-518f06b26314",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Item name is returned\"] = jsonData.name === 'itemA';",
									"tests[\"Item price is returned\"] = jsonData.price === 17.99;",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 17.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/api/item/itemA",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"itemA"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/itemB in store1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd10cc53-2265-4889-8f4a-6539dacb3920",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Item name is returned\"] = jsonData.name === 'itemB';",
									"tests[\"Item price is returned\"] = jsonData.price === 13.99;",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 13.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/api/item/itemB",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"itemB"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/store2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "048cd0ea-f53e-4c2a-a030-5d323ddd4493",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Store name is returned\"] = jsonData.name === 'store2';",
									"tests[\"Store id is returned\"] = jsonData.id === 2;",
									"tests[\"Store items are an empty list\"] = jsonData.items.length === 0;",
									"",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';",
									"",
									"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/store/store2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"store",
								"store2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/itemC in store2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cc895ad-bd32-4235-8dc3-c69c3a76fc97",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Item name is returned\"] = jsonData.name === 'itemC';",
									"tests[\"Item price is returned\"] = jsonData.price === 14.99;",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 14.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/api/item/itemC",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"itemC"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/store3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a96e8bb-69e4-4048-8e3f-6f9a0171ae81",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Store name is returned\"] = jsonData.name === 'store3';",
									"tests[\"Store id is returned\"] = jsonData.id === 3;",
									"tests[\"Store items are an empty list\"] = jsonData.items.length === 0;",
									"",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';",
									"",
									"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/store/store3",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"store",
								"store3"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/itemD in store3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2ac5e5b-92a5-4b6f-80ab-0b15bbf4079b",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Item name is returned\"] = jsonData.name === 'itemD';",
									"tests[\"Item price is returned\"] = jsonData.price === 18.99;",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 18.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/api/item/itemD",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"itemD"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/itemE in store3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22ea0ae5-6adb-44bd-b776-8c1b8efb4dc7",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Item name is returned\"] = jsonData.name === 'itemE';",
									"tests[\"Item price is returned\"] = jsonData.price === 17.99;",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 17.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/api/item/itemE",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"itemE"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/itemF in store3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01773c1a-3670-4340-9c02-1208d317db3a",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Item name is returned\"] = jsonData.name === 'itemF';",
									"tests[\"Item price is returned\"] = jsonData.price === 7.99;",
									"tests[\"Successful POST request\"] = responseCode.code === 201;",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 7.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/api/item/itemF",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"item",
								"itemF"
							]
						}
					},
					"response": []
				}
			],
			"description": "Check user can register.\nCheck user can create store.\nCheck user can create item in store."
		}
	]
}